// <auto-generated />
using System;
using CBS.TransactionManagement.Domain;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CBS.TransactionManagement.Domain.Migrations
{
    [DbContext(typeof(TransactionContext))]
    [Migration("20250131182229_T83")]
    partial class T83
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CBS.TransactionManagement.Data.Account", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BlockedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BlockedId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateBlocked")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfLastOperation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfOpeningBalance")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateReleased")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EncryptedBalance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InterestGenerated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTellerAccount")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastInterestCalculatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LastInterestPosted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("LastOperationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpeningBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OpenningOfDayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpenningOfDayReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpenningOfDayStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ReasonOfBlocked")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("MemberAccounts");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.AccountingEvent", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChartOfAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationAccountTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationEventAttributeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AccountingEvents");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ActionName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StackTrace")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CashDepositParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CamCCULShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CamCCULShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepositType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DestinationBranchOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DestinationBranchOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventAttributForDepositFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventAttributForDepositFormFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FluxAndPTMShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FluxAndPTMShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InterDepositOperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfiguredForShareing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PartnerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SourceBrachOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SourceBrachOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CashDepositParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CashReplenishmentPrimaryTeller", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ConfirmedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitializeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requetcomment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TellerId");

                    b.ToTable("CashReplenishmentPrimaryTellers");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CashReplenishmentSubTeller", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedByUserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ConfirmedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitializeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("RequestedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RequesterName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequesterUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requetcomment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TellerId");

                    b.ToTable("CashReplenishmentSubTellers");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.ChargesWaivedP.ChargesWaived", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfWaived")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfWaiverRequest")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWaiverDone")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NormalCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TellerCaise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WaiverInitiator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChargesWaived");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CloseFeeParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CloseFeeFlat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CloseFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationEventAttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("CloseFeeParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Config", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("FridayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDayClosedAutomatic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDayOpen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsYearOpen")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("MWednessdayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("MondayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SaturdayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SetCloseDayTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("SundayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("ThursdayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("TuesDayIsHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("UseAutomaticChargingSystem")
                        .HasColumnType("bit");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Configs");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CurrencyNotes", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Denomination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DinominationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Value")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CurrencyNotes");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.DailyProvision", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LeftOverAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("ProvisionedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DailyProvisions");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.DailyTeller", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumCeilin")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumWithdrawalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProvisionedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TellerId");

                    b.ToTable("DailyTellers");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.AccountingDayOpening.AccountingDay", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ClosedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClosedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCentralized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsClosed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OpenedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpenedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ReOpenedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AccountingDays");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.BlockedAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("BlockedAccounts");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashCeilingMovement.CashCeilingRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CashoutRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("InitializeDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestedByUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Requetcomment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TellerId");

                    b.ToTable("CashCeillingMovements");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashOutThirdPartyP.CashOutThirdParty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CallBackURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfConfirmation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfInitiation")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalTransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TellerId");

                    b.ToTable("CashOutThirdParty");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashVaultP.Vault", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClosingCoin1")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin10")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin100")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin25")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin5")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin50")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin500")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote1000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote10000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote2000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote500")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote5000")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Diamention")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnryptedBalance")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastOperation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastOperationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaximumCapacity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviouseBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Vaults");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashVaultP.VaultAuthorisedPerson", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Date")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLeader")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaultId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VaultId");

                    b.ToTable("VaultAuthorisedPersons");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.ChangeManagement.CashChangeHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AmountGiven")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountReceive")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ChangeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChangeReason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GivenCoin1")
                        .HasColumnType("int");

                    b.Property<int>("GivenCoin10")
                        .HasColumnType("int");

                    b.Property<int>("GivenCoin100")
                        .HasColumnType("int");

                    b.Property<int>("GivenCoin25")
                        .HasColumnType("int");

                    b.Property<int>("GivenCoin5")
                        .HasColumnType("int");

                    b.Property<int>("GivenCoin50")
                        .HasColumnType("int");

                    b.Property<int>("GivenCoin500")
                        .HasColumnType("int");

                    b.Property<int>("GivenNote1000")
                        .HasColumnType("int");

                    b.Property<int>("GivenNote10000")
                        .HasColumnType("int");

                    b.Property<int>("GivenNote2000")
                        .HasColumnType("int");

                    b.Property<int>("GivenNote500")
                        .HasColumnType("int");

                    b.Property<int>("GivenNote5000")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrimaryTellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceivedCoin1")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCoin10")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCoin100")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCoin25")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCoin5")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCoin50")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedCoin500")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedNote1000")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedNote10000")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedNote2000")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedNote500")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedNote5000")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceOperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubTellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SystemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaultId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CashChangeHistories");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.ClossingOfAccountP.ClossingOfAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GracePeriodDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiatingBranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotificationPaid")
                        .HasColumnType("bit");

                    b.Property<DateTime>("MatrurityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MemberBranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NotificationCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClossingOfAccounts");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.DailyStatisticBoard.GeneralDailyDashboard", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ActiveAccounts")
                        .HasColumnType("int");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CashInHand56")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashInHand57")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashReplenishmentPrimaryTill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashReplenishmentSubTill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClosedAccounts")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyCollectionCashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyCollectionCashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DailyExpenses")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposits")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DormantAccounts")
                        .HasColumnType("int");

                    b.Property<decimal>("InterestPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanDisbursements")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanRepayments")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MTNMobileMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MobileMoneyCashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MomocashCollection")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("NewMembers")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashIn")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashInMTN")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashInOrange")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashOut")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashOutMTN")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashOutOrange")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDailyCollectionCashIn")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDailyCollectionCashOut")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfInterBranchCashIn")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfInterBranchCashOut")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLoanDisbursementFee")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfLoanFee")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRemiitanceInitiated")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfRemiitanceReception")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfTransfer")
                        .HasColumnType("int");

                    b.Property<decimal>("OrangeMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrangeMoneyCashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("OrdinaryShares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Penalties")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreferenceShares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrimaryTillBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrimaryTillOpenOfDayBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Savings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ServiceFeesCollected")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTillBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SubTillTillOpenOfDayBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCashInAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCashOutAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Transfer")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Vat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfInterBranchCashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfInterBranchCashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfRemiitanceInitiated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfRemiitanceReception")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("GeneralDailyDashboards");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.FeeP.Fee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAppliesOnHoliday")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMoralPerson")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumExtraCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumRateAboveMaximumRange")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationFeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.FeeP.FeePolicy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AmountFrom")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountTo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Charge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCentralised")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FeeId");

                    b.ToTable("FeePolicies");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.FileDownloadInfoP.FileDownloadInfo", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInitiated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DownloadPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Extension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullPath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FileDownloadInfo");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.HolyDayP.HolyDay", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCentralisedConfiguration")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNormalOperationDay")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("HolyDays");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.HolyDayRecurringP.HolyDayRecurring", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfMonth")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolidayType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurrencePattern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringDay")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("HolyDayRecurrings");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MemberAccountConfiguration.MemberAccountActivation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CustomeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatePaid")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPaid")
                        .HasColumnType("bit");

                    b.Property<string>("MemberRegistrationFeePolicyId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FeeId");

                    b.HasIndex("MemberRegistrationFeePolicyId");

                    b.ToTable("MemberAccountActivations");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MemberAccountConfiguration.MemberRegistrationFeePolicy", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountTypeForYearyDeductionOfBuildingContribution")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EventCodeBuildingContributionFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCodeByeLawsFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCodeEntranceFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCodeLoanPolicyFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LegalForm")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaximumBuildingContribution")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumByeLawsFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumEntrancenFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumLoanPolicyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumBuildingContributionFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumByeLawsFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumEntranceFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumLoanPolicyFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PolicyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("YearBuildingContributionFee")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("MemberAccountActivationPolicies");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MemberNoneCashOperationP.MemberNoneCashOperation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNUmber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedByUSerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BookingDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiatedByUSerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatedUserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("MemberNoneCashOperations");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MobileMoney.MobileMoneyCashTopup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MobileMoneyMemberReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileMoneyTransactionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperatorType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestApprovalNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestInitiatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MobileMoneyCashTopups");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.OldLoanConfiguration.OldLoanAccountingMaping", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChartOfAccountIdForCapital")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForInterest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionMoreThanFourYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionMoreThanOneYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionMoreThanThreeYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionMoreThanTwoYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForVAT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OldLoanAccountingMapings");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.OtherCashInP.OtherTransaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AmountInWord")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfOperation")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EnventName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Narration")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelephoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TellerId");

                    b.ToTable("OtherTransactions");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.Receipts.Details.PaymentDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccountingDay")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoanCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentReceiptId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SericeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("PaymentReceiptId");

                    b.ToTable("PaymentDetails");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.Receipts.Payments.PaymentReceipt", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AccountingDay")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AmountInWord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CashierName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Coin1")
                        .HasColumnType("int");

                    b.Property<int>("Coin10")
                        .HasColumnType("int");

                    b.Property<int>("Coin100")
                        .HasColumnType("int");

                    b.Property<int>("Coin25")
                        .HasColumnType("int");

                    b.Property<int>("Coin5")
                        .HasColumnType("int");

                    b.Property<int>("Coin50")
                        .HasColumnType("int");

                    b.Property<int>("Coin500")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepositorCNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorPhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Note1000")
                        .HasColumnType("int");

                    b.Property<int>("Note10000")
                        .HasColumnType("int");

                    b.Property<int>("Note2000")
                        .HasColumnType("int");

                    b.Property<int>("Note500")
                        .HasColumnType("int");

                    b.Property<int>("Note5000")
                        .HasColumnType("int");

                    b.Property<string>("OperationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationTypeGrouping")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PortalUsed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceOfRequest")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TillName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("PaymentReceipts");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.RemittanceP.Remittance", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedOTP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverCNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverCNIDateOfExpiration")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverCNIDateOfIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverCNIPlcaceOfIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedReceiverPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CapturedRemittanceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CapturedRemittanceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CapturedSenderAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedSenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedSenderPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CapturedSenderSecretCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChargeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfCashOut")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateOfIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DatePaidToCashDesk")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExpirationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InitailAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InitiatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InitiationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("InternationalTransfterDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAutoVerifyReceiver")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAutoVerifySender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsManualVerification")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOTPVerified")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlaceOfIssue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCNIExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCNIIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCNIPlaceOfIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingBranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingBranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingBranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingTellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceivingTellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("RecivingBranchCommision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RemittanceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendSMSTotReceiver")
                        .HasColumnType("bit");

                    b.Property<string>("SenderAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderCNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderCountry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderSecreteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceBranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SourceBranchCommision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SourceBranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceBranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceTellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceTellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransferType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Remittances");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.ReversalRequestP.ReversalRequest", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateTreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("DebitDirection")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAppoved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("RequestStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatedTellerCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatedTellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TreatedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidationComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ValidationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TellerId");

                    b.ToTable("ReversalRequests");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryFiles.FileUpload", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileCategory")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUploadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvalaibleForExecution")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalaryProcessingStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TotalBranchesInvolvedInPayrolProcessing")
                        .HasColumnType("int");

                    b.Property<int>("TotalBranchesThatHaveExecutedPayrol")
                        .HasColumnType("int");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FileUpload");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryFiles.SalaryExtract", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FileUploadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanPrincipal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MembersName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Saving")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("FileUploadId");

                    b.ToTable("SalaryExtract");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryAnalysisResultP.SalaryAnalysisResult", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExecutedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileUploadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalBranches")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalCharges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDeposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLoanCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLoanInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalLoanRepayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TotalMembers")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalNetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPreferenceShares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRemainingSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSavings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalShares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalVAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FileUploadId");

                    b.ToTable("SalaryAnalysisResults");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryAnalysisResultP.SalaryAnalysisResultDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoanCapital")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreferenceShares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalaryAnalysisResultId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Savings")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Shares")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalLoanRepayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VAT")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SalaryAnalysisResultId");

                    b.ToTable("SalaryAnalysisResultDetails");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryUploadedModelP.SalaryUploadModel", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileUploadId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LaisonBankAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NetSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SalaryCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalaryType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UploadedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FileUploadId");

                    b.ToTable("SalaryUploadModels");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.StandingOrderP.StandingOrder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("ExternalAccount")
                        .HasColumnType("bit");

                    b.Property<string>("ExternalAccountHolderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Frequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAutomatic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("MemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PersonalNote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Purpose")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceAccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StandingOrders");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SavingProductFeeP.SavingProductFee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FeePolicyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SavingProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("FeeId");

                    b.HasIndex("SavingProductId");

                    b.ToTable("SavingProductFees");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.ThirtPartyPayment.GimacPayment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApplicationName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BeneficialAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("ExternalTransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InternalTransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ItemType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Msisdn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GimacPayments");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.TransferLimits.Transfer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ApprovedByUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Charges")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfInitiation")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DestinationAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationAccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationBrachId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationBranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DestinationCommision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("InitiatedByUSerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitiatorComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterBranchOperation")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecieverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceAccountName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceAccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceAccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceBrachId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceBranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SourceCommision")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SourceType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionRef")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValidatorComment")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TellerId");

                    b.ToTable("Transfers");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.VaultOperationP.VaultOperation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CashInHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashInVault")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DoneBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InitializationNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VaultId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("VaultId");

                    b.ToTable("VaultOperations");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.WithdrawalNotificationP.WithdrawalNotification", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("AmountRequired")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedByName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateFormFeeWasPaid")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfIntendedWithdrawal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateWithdrawalWasDone")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FormNotificationCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("GracePeriodDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InitiatingBranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExpired")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNotificationPaid")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithdrawalDone")
                        .HasColumnType("bit");

                    b.Property<decimal>("LoanBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MemberBranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NotificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Purpose")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonForWithdrawal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceClearName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerCaise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerCaise_fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId_fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerName_fee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("WithdrawalNotifications");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.EntryFeeParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DestinationBranchOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EntryFeeFlat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EntryFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PartnerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SourceBrachOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("EntryFeeParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.FrontEndAuditTB", b =>
                {
                    b.Property<string>("UsersAuditID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ActionName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AjaxPostData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ControllerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LoggedInAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LoggedOutAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoginStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PageAccessed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Referer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequestMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerializedRequestData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SessionID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserAgent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserRole")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsersAuditID");

                    b.ToTable("FrontEndAuditLoggs");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.ManagementFeeParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DestinationBranchOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("ManagementFeeFlat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ManagementFeeFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ManagementFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PartnerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SourceBrachOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ManagementFeeParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.PrimaryTellerProvisioningHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CashAtHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CashReplenishmentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CloseOfDayReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClosingCoin1")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin10")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin100")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin25")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin5")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin50")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin500")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote1000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote10000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote2000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote500")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote5000")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClossedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClossedStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DailyTellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EndOfDayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCashReplenishment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastOPerationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastOperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OpenOfDayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpeningCoin1")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin10")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin100")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin25")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin5")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin50")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin500")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote1000")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote10000")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote2000")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote500")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote5000")
                        .HasColumnType("int");

                    b.Property<decimal>("PreviouseBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrimaryTellerComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryTellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvisionedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReplenishmentReferenceNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserIdInChargeOfThisTeller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DailyTellerId");

                    b.HasIndex("TellerId");

                    b.ToTable("PrimaryTellerProvisioningHistories");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.ReopenFeeParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DestinationBranchOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PartnerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("ReopenFeeFlat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ReopenFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SourceBrachOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ReopenFeeParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.SavingProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountManagementPositionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNuber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ActivateFor3PPApp")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateForMobileApp")
                        .HasColumnType("bit");

                    b.Property<bool>("ActivateSavingWithdrawalNotificationForMobileApp")
                        .HasColumnType("bit");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<decimal>("AdvanceOfSalaryFormFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("AllowInterbranchDeposit")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowInterbranchTransfter")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowInterbranchWithdrawal")
                        .HasColumnType("bit");

                    b.Property<bool>("AllowShareing")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoAddToMember")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoVerifyRemittanceReceiver")
                        .HasColumnType("bit");

                    b.Property<bool>("AutoVerifyRemittanceSender")
                        .HasColumnType("bit");

                    b.Property<string>("BankId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanPeformCashOut3PP")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPeformCashOutMobileApp")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPeformCashin3PP")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPeformCashinMobileApp")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPeformTransfer3PP")
                        .HasColumnType("bit");

                    b.Property<bool>("CanPeformTransferMobileApp")
                        .HasColumnType("bit");

                    b.Property<string>("ChartOfAccountIdCamCCULShareCMoneyTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdCamCCULShareCashInCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdCamCCULShareCashOutCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdCamCCULShareTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdCashInCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdCashOutCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdDestinationCMoneyTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdFluxAndPTMShareCMoneyTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdFluxAndPTMShareCashInCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdFluxAndPTMShareCashOutCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdFluxAndPTMShareTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdHeadOfficeShareCMoneyTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdHeadOfficeShareCashInCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdHeadOfficeShareCashOutCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdHeadOfficeShareTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdInterestAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdInterestExpenseAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdLiassonAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdPricipalAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdSavingFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdSourceCMoneyTransferCommission")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdTransferFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdWithrawalFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("EventCodeAdvanceOfSalaryFormFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCodeMoralPersonWithdrawalFormFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCodePhysicalPersonWithdrawalFormFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EventCodeWithdrawalFormSavingFormFeeFor3PP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestAccrualFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepositAllowedDirectlyTothisAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTermProduct")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsedForTellerProvisioning")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWithdrawalAllowedDirectlyFromthisAccount")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumAccountBalanceMoralPerson")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumAccountBalancePhysicalPerson")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("OTPControl")
                        .HasColumnType("bit");

                    b.Property<string>("PostingFrequency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCategory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WithdrawalFormSavingFormFeeFor3PP")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("SavingProducts");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.SubTellerProvioningHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CashAtHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CloseOfReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClosingCoin1")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin10")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin100")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin25")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin5")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin50")
                        .HasColumnType("int");

                    b.Property<int>("ClosingCoin500")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote1000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote10000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote2000")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote500")
                        .HasColumnType("int");

                    b.Property<int>("ClosingNote5000")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ClossedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClossedStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DailyTellerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EndOfDayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCashReplenished")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequestedForCashReplenishment")
                        .HasColumnType("bit");

                    b.Property<decimal>("LastOPerationAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LastOperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastUserID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfCashIn")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCashOut")
                        .HasColumnType("int");

                    b.Property<decimal>("OpenOfDayAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("OpenedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("OpeningCoin1")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin10")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin100")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin25")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin5")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin50")
                        .HasColumnType("int");

                    b.Property<int>("OpeningCoin500")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote1000")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote10000")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote2000")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote500")
                        .HasColumnType("int");

                    b.Property<int>("OpeningNote5000")
                        .HasColumnType("int");

                    b.Property<decimal>("PreviouseBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PrimaryTellerComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimaryTellerConfirmationStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProvisionedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReferenceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ReplenishedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SubTellerComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("UserIdInChargeOfThisTeller")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("VolumeOfCashIn")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfCashOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfCashRecieved")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("VolumeOfCashTransfered")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DailyTellerId");

                    b.HasIndex("TellerId");

                    b.ToTable("SubTellerProvioningHistories");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Teller", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromAuxillaryAccountNumber_A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromBranchAccountNumber_C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromBranchFloatAccountNumber_D")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromHeadOfficeAccountNumber_B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("MapMobileMoneyToNoneMemberMobileMoneyReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaximumAmountToManage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumDepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumTransferAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumWithdrawalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumAmountToManage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumDepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumTransferAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumWithdrawalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MobileMoneyAlertMessageInEnglish")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileMoneyAlertMessageInFrench")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MobileMoneyFloatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MobileMoneyMaximumBalanceAlertLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MobileMoneyMinimumBalanceAlertLevel")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MobileMoneyUserKeepingThePhone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationEventCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PerformCashIn")
                        .HasColumnType("bit");

                    b.Property<bool>("PerformCashOut")
                        .HasColumnType("bit");

                    b.Property<bool>("PerformTransfer")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumberToRecieveAlert")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToBranchFloatAccountNumberAuxillary_A")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToBranchFloatAccountNumberBranch_C")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToBranchFloatAccountNumberHeadOffice_B")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ToHeadOfficeFloatAccountNumber_D")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tellers");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.TellerOperation", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationBrachId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DestinationBranchCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCashOperation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterBranch")
                        .HasColumnType("bit");

                    b.Property<string>("MemberAccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemberName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OpenOfDayReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReferenceId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SourceBranchCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SourceBranchId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TellerID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserID")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TransactionId");

                    b.ToTable("TellerOperation");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.TermDepositParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ChartOfAccountIdEarlyCloseFeeAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdInterestAccrualAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdInterestExpenseAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdInterestWriteOffAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdPrincipalAccount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DurationInDay")
                        .HasColumnType("int");

                    b.Property<string>("DurationInPeriod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EarlyCloseFeeFlat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EarlyCloseFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool?>("IsDebit")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OperationEventAttributeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("TermDepositParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("AccountingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CamCCULCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CheckName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CloseOfAccountCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Credit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Currency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Debit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepositerNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositerTelephone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorIDExpiryDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorIDIssueDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorIDNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorIDNumberPlaceOfIssue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepositorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DestinationBrachId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DestinationBranchCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ExternalApplicationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExternalReference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("FluxAndPTMCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDepositDoneByAccountOwner")
                        .HasColumnType("bit");

                    b.Property<bool>("IsExternalOperation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterBrachOperation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSWS")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OperationCharge")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("OperationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OriginalDepositAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PreviousBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderAccountId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SourceBrachId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SourceBranchCommission")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SourceType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TellerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TransactionReference")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WithdrawalChargeWithoutNotification")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WithrawalFormCharge")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("TellerId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.TransferParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CamCCULShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CamCCULShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DestinationBranchOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DestinationBranchOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FluxAndPTMShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FluxAndPTMShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsConfiguredForShareing")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SourceBrachOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SourceBrachOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferFeeFlat")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransferFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TransferType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("TransferParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.WithdrawalParameter", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CamCCULShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CamCCULShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DestinationBranchOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DestinationBranchOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FluxAndPTMShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FluxAndPTMShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HeadOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("MoralPersonWithdrawalFormFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("MustNotifyOnWithdrawal")
                        .HasColumnType("bit");

                    b.Property<int>("NotificationPeriodInMonths")
                        .HasColumnType("int");

                    b.Property<decimal>("PartnerShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PhysicalPersonWithdrawalFormFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("SourceBrachOfficeShare")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SourceBrachOfficeShareCMoney")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("WithdrawalType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WithdrawalParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Account", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("Accounts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CashDepositParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("CashDepositParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CashReplenishmentPrimaryTeller", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany("CashReplenishmentPrimaryTellers")
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CashReplenishmentSubTeller", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany("CashReplenishmentSubTellers")
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.CloseFeeParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("CloseFeeParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.DailyTeller", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany()
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.BlockedAccount", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashCeilingMovement.CashCeilingRequest", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany()
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashOutThirdPartyP.CashOutThirdParty", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany()
                        .HasForeignKey("TellerId");

                    b.Navigation("Account");

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashVaultP.VaultAuthorisedPerson", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.CashVaultP.Vault", "Vault")
                        .WithMany("VaultAuthorisedPersons")
                        .HasForeignKey("VaultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vault");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.FeeP.FeePolicy", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.FeeP.Fee", "Fee")
                        .WithMany("FeePolicies")
                        .HasForeignKey("FeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fee");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MemberAccountConfiguration.MemberAccountActivation", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.FeeP.Fee", "Fee")
                        .WithMany()
                        .HasForeignKey("FeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.TransactionManagement.Data.Entity.MemberAccountConfiguration.MemberRegistrationFeePolicy", null)
                        .WithMany("MemberAccountActivations")
                        .HasForeignKey("MemberRegistrationFeePolicyId");

                    b.Navigation("Fee");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MemberNoneCashOperationP.MemberNoneCashOperation", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.OtherCashInP.OtherTransaction", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany("OtherTransactions")
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.Receipts.Details.PaymentDetail", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.Receipts.Payments.PaymentReceipt", "PaymentReceipt")
                        .WithMany("PaymentDetails")
                        .HasForeignKey("PaymentReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentReceipt");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.ReversalRequestP.ReversalRequest", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany()
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryFiles.SalaryExtract", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.SalaryFiles.FileUpload", "FileUpload")
                        .WithMany()
                        .HasForeignKey("FileUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUpload");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryAnalysisResultP.SalaryAnalysisResult", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.SalaryFiles.FileUpload", "FileUpload")
                        .WithMany()
                        .HasForeignKey("FileUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUpload");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryAnalysisResultP.SalaryAnalysisResultDetail", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryAnalysisResultP.SalaryAnalysisResult", "SalaryAnalysisResult")
                        .WithMany("salaryAnalysisResultDetails")
                        .HasForeignKey("SalaryAnalysisResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SalaryAnalysisResult");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryUploadedModelP.SalaryUploadModel", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.SalaryFiles.FileUpload", "FileUpload")
                        .WithMany("SalaryUploadModels")
                        .HasForeignKey("FileUploadId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FileUpload");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SavingProductFeeP.SavingProductFee", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.FeeP.Fee", "Fee")
                        .WithMany()
                        .HasForeignKey("FeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "SavingProduct")
                        .WithMany("SavingProductFee")
                        .HasForeignKey("SavingProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fee");

                    b.Navigation("SavingProduct");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.TransferLimits.Transfer", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany()
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.VaultOperationP.VaultOperation", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Entity.CashVaultP.Vault", "Vault")
                        .WithMany("VaultOperations")
                        .HasForeignKey("VaultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vault");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.WithdrawalNotificationP.WithdrawalNotification", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany("WithdrawalNotifications")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.EntryFeeParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("EntryFeeParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.ManagementFeeParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("ManagementFeeParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.PrimaryTellerProvisioningHistory", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.DailyTeller", null)
                        .WithMany("PrimaryTellerProvisioningHistories")
                        .HasForeignKey("DailyTellerId");

                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany("PrimaryTellerProvisioningHistories")
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.ReopenFeeParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("ReopenFeeParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.SubTellerProvioningHistory", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.DailyTeller", null)
                        .WithMany("SubTellerProvioningHistories")
                        .HasForeignKey("DailyTellerId");

                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany("SubTellerProvioningHistories")
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.TellerOperation", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Transaction", null)
                        .WithMany("TellerOperations")
                        .HasForeignKey("TransactionId");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.TermDepositParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("TermDeposits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Transaction", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.Account", "Account")
                        .WithMany("Transactions")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.TransactionManagement.Data.Teller", "Teller")
                        .WithMany("Transactions")
                        .HasForeignKey("TellerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Teller");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.TransferParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("TransferParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.WithdrawalParameter", b =>
                {
                    b.HasOne("CBS.TransactionManagement.Data.SavingProduct", "Product")
                        .WithMany("WithdrawalParameters")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Account", b =>
                {
                    b.Navigation("Transactions");

                    b.Navigation("WithdrawalNotifications");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.DailyTeller", b =>
                {
                    b.Navigation("PrimaryTellerProvisioningHistories");

                    b.Navigation("SubTellerProvioningHistories");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.CashVaultP.Vault", b =>
                {
                    b.Navigation("VaultAuthorisedPersons");

                    b.Navigation("VaultOperations");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.FeeP.Fee", b =>
                {
                    b.Navigation("FeePolicies");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.MemberAccountConfiguration.MemberRegistrationFeePolicy", b =>
                {
                    b.Navigation("MemberAccountActivations");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.Receipts.Payments.PaymentReceipt", b =>
                {
                    b.Navigation("PaymentDetails");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryFiles.FileUpload", b =>
                {
                    b.Navigation("SalaryUploadModels");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Entity.SalaryManagement.SalaryAnalysisResultP.SalaryAnalysisResult", b =>
                {
                    b.Navigation("salaryAnalysisResultDetails");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.SavingProduct", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CashDepositParameters");

                    b.Navigation("CloseFeeParameters");

                    b.Navigation("EntryFeeParameters");

                    b.Navigation("ManagementFeeParameters");

                    b.Navigation("ReopenFeeParameters");

                    b.Navigation("SavingProductFee");

                    b.Navigation("TermDeposits");

                    b.Navigation("TransferParameters");

                    b.Navigation("WithdrawalParameters");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Teller", b =>
                {
                    b.Navigation("CashReplenishmentPrimaryTellers");

                    b.Navigation("CashReplenishmentSubTellers");

                    b.Navigation("OtherTransactions");

                    b.Navigation("PrimaryTellerProvisioningHistories");

                    b.Navigation("SubTellerProvioningHistories");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("CBS.TransactionManagement.Data.Transaction", b =>
                {
                    b.Navigation("TellerOperations");
                });
#pragma warning restore 612, 618
        }
    }
}
