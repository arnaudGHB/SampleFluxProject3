// <auto-generated />
using System;
using CBS.NLoan.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CBS.NLoan.Domain.Migrations
{
    [DbContext(typeof(LoanContext))]
    [Migration("20240319133445_V8")]
    partial class V8
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CBS.NLoan.Data.AuditLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Changes")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EntityName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.AlertProfileP.AlertProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSupperAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Msisdn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendEmail")
                        .HasColumnType("bit");

                    b.Property<bool>("SendSMS")
                        .HasColumnType("bit");

                    b.Property<string>("ServiceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AlertProfiles");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CollateraP.Collateral", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Collaterals");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CollateraP.LoanApplicationCollateral", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoanProductCollateralId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoanProductCollateralId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("LoanProductCollateralId");

                    b.HasIndex("LoanProductCollateralId1");

                    b.ToTable("LoanCollaterals");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeGroup", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CommiteeLeaderUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfMembers")
                        .HasColumnType("int");

                    b.Property<int>("NumberToApprovalsToValidationALoan")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("LoanCommiteeGroups");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeMember", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanCommiteeGroupId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanCommiteeGroupId");

                    b.ToTable("LoanCommeteeMembers");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeValidationHistory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoanCommiteeMemberId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.HasIndex("LoanCommiteeMemberId");

                    b.ToTable("CreditCommiteeValidations");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CustomerLoanAccountP.CustomerLoanAccount", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Balance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EncryptionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastLoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreviousBalance")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerLoanAccounts");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.Document", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LinkDoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.DocumentAttachedToLoan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileExtension")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("DocumentAttachedToLoans");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.DocumentJoin", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DocumentPackId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DocumentId");

                    b.HasIndex("DocumentPackId");

                    b.ToTable("DocumentJoins");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.DocumentPack", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DocumentPacks");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.FeeP.Fee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MaximumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.FeeP.LoanProductFee", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("FeeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FeeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FeeId");

                    b.HasIndex("LoanProductId");

                    b.ToTable("LoanProductFeeJoins");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.FundingLineP.FundingLine", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountingRuleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BeginDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FundingLines");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.CustomerProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerProfileId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanProductId");

                    b.ToTable("CustomerProfiles");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LineOfCredit", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("AmountMax")
                        .HasColumnType("float");

                    b.Property<double>("AmountMin")
                        .HasColumnType("float");

                    b.Property<int>("NumberInstallmentMax")
                        .HasColumnType("int");

                    b.Property<int>("NumberInstallmentMin")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LineOfCredits");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AccrualInterest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AccrualInterestBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AccrualInterestPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DisbursementDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DueAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeeBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FeePaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("FirstInstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("InterestForcasted")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCurrentLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeliquentLoan")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLoanDisbursted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRestructured")
                        .HasColumnType("bit");

                    b.Property<bool>("IsWriteOffLoan")
                        .HasColumnType("bit");

                    b.Property<DateTime>("LastInterestCalculatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("LastPayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("LastRefundDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("LoanDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LoanManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MaturityDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NewLoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("NextInstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PenaltyBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PenaltyPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrincipalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPrincipalPaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("Loans");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanAmortization", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Annuity")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("BegginingBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Due")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Fee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRescheduled")
                        .HasColumnType("bit");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MethodOfPayment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NextPaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PendingDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrincipalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrincipalDue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Sno")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDue")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanAmortizations");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AmortizationType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalComment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ApprovalStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollateralCoverageRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DisbursementDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisburstmentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EconomicActivityId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FirstInstallmentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("GracePeriodAfterMaturityDate")
                        .HasColumnType("int");

                    b.Property<int>("GracePeriodBeforeFirstPayment")
                        .HasColumnType("int");

                    b.Property<decimal>("GuaratorSavingAccountCoverageRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisbursed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDisbursted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThereCollateral")
                        .HasColumnType("bit");

                    b.Property<bool>("IsThereGuarantor")
                        .HasColumnType("bit");

                    b.Property<int>("LoanDuration")
                        .HasColumnType("int");

                    b.Property<string>("LoanManager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoanPurposeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoanType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("NumberOfRepayment")
                        .HasColumnType("int");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ProcessingFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RepaymentCircle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalaryAccountCoverageRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SavingAccountCoverageRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ShareAccountCoverageRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TotalLoanRiskCoverage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanProductId");

                    b.HasIndex("LoanPurposeId");

                    b.HasIndex("TaxId");

                    b.ToTable("LoanApplications");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanCommentry", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("LoanCommentries");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductCategory", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LoanCycles");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanDeliquencyConfiguration", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountingRuleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionToPerform")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysFrom")
                        .HasColumnType("int");

                    b.Property<int>("DaysTo")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SendSMStoClient")
                        .HasColumnType("bit");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoanDeliquencyConfigurations");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanGuarantor", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ExpireDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GuaranteeAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("GuarantorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdCardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCoMember")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("IssueDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanApplicationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanApplicationId");

                    b.ToTable("LoanGuarantors");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("ActiveStatus")
                        .HasColumnType("bit");

                    b.Property<bool>("BlockedGuarantorAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("BlockedSalaryAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("BlockedSavingAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("CalculateInterestOnEachRepaymentOnProRatabase")
                        .HasColumnType("bit");

                    b.Property<string>("ChartOfAccountIdForAccrualInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForEarlyPartialRepaymentFeeIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForEarlyTotalRepaymentFeeIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForFee")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForInterestIncome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForLoanLossReserve")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForLoanLossReserveInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForLoanLossReservePenalties")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForPenalty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForPrincipalAmount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionOnInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionOnLateFees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionOnPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionReversalOnInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionReversalOnLateFees")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForProvisionReversalOnPrincipal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForTax")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForWriteOffInterest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChartOfAccountIdForWriteOffPotfolio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DefaultCollateralPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DefaultDurationsPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("DefaultInterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DefaultLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("DefaultNumberOfRepayment")
                        .HasColumnType("int");

                    b.Property<decimal>("DefaultProcessingFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("EarlyPartialRepaymentFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EarlyTotalRepaymentFee")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FirstRepaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("HasTopUp")
                        .HasColumnType("bit");

                    b.Property<string>("HowShoudInterestBeCahrgedInLoanSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HowShoudPrincipalBeCahrgedInLoanSchedule")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEarlyPartialRepaymentFeeRate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEarlyTotalRepaymentFeeRate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeeDeductedUpFront")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInterestDeductedUpFront")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequiredCollateral")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequiredSalaryccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequiredSavingAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequiredShareAccount")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequredIrrivocableSalaryTransfer")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRequresRegisteredPublicAuthority")
                        .HasColumnType("bit");

                    b.Property<string>("LoanDurationPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanInterestPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LoanInterestType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LoanMaximumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("LoanMinimumAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("LoanScheduleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MaxTopUpLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumCollateralPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaximumDurationPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("MaximumInterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumMaximumSalaryAccountBalanceRateForTheRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MaximumNumberOfRepayment")
                        .HasColumnType("int");

                    b.Property<decimal>("MaximumProcessingFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumSavingAccountBalanceRateForTheRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MaximumShareAccountBalanceRateForTheRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinTopUpLoanAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumCollateralPercentage")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinimumDurationPeriod")
                        .HasColumnType("int");

                    b.Property<decimal>("MinimumInterestRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MinimumNumberOfRepayment")
                        .HasColumnType("int");

                    b.Property<decimal>("MinimumProcessingFeeRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumSalaryAccountBalanceRateForTheRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumSavingAccountBalanceRateForTheRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumShareAccountBalanceRateForTheRequestAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresGuarantor")
                        .HasColumnType("bit");

                    b.Property<string>("TaxId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TopUpAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("TaxId");

                    b.ToTable("LoanProducts");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductMaturityPeriodExtension", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CalculateInterestOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("ExternLoanAfterMaturityPeriod")
                        .HasColumnType("bit");

                    b.Property<bool>("IncludePenalTyFee")
                        .HasColumnType("bit");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("KeepLoanStatusAsPAssedMaturityEvenAfterLoanIsExterneded")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaturityPeriodLoanInterestType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RecurringPeriod")
                        .HasColumnType("int");

                    b.Property<string>("RecurringPeriodType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanProductId");

                    b.ToTable("LoanProductMaturityPeriodExtensions");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductRepaymentCycle", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RepaymentCycle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanProductId");

                    b.ToTable("LoanProductRepaymentCycle");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductRepaymentOrder", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RepaymentOrder")
                        .HasColumnType("int");

                    b.Property<string>("RepaymentReceive")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanProductId");

                    b.ToTable("LoanProductRepaymentOrder");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.RescheduleLoan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("RescheduleLoans");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanPurposeP.LoanPurpose", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PurposeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LoanPurposes");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.PenaltyP.Penalty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CalculatePenaltyOn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysToApplyPenalty")
                        .HasColumnType("int");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GracePeriodInDaysBeforeApplyingPenalty")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRate")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PenaltyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PenaltyType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PenaltyValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RecuringInterval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RecurringPeriod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WaivePenaltyOnBranchHolidays")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LoanProductId");

                    b.ToTable("Penalties");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.PeriodP.Period", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Periods");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.RefundP.Refund", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfPayment")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Paid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Principal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RepaymentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("Refunds");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.RefundP.RefundDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("CollectedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Interest")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InterestBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanAmortizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("PenaltyAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PenaltyAmountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrincipalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrincipalBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RefundId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("TaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxAmountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("LoanAmortizationId");

                    b.HasIndex("RefundId");

                    b.ToTable("RefundDetails");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.TaxP.Tax", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("AppliedOnInterest")
                        .HasColumnType("bit");

                    b.Property<bool>("AppliedWhenLoanRequestIsGreaterThanSaving")
                        .HasColumnType("bit");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVat")
                        .HasColumnType("bit");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SavingControlAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TaxRate")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Taxes");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.WriteOffLoanP.WriteOffLoan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AccountingRuleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("AccruedInterests")
                        .HasColumnType("float");

                    b.Property<double>("AccruedPenalties")
                        .HasColumnType("float");

                    b.Property<string>("BankId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrganizationId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("OutstandingLoanBalance")
                        .HasColumnType("float");

                    b.Property<double>("OverduePrincipal")
                        .HasColumnType("float");

                    b.Property<int>("PastDueDays")
                        .HasColumnType("int");

                    b.Property<string>("WriteOffMethod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("LoanId");

                    b.ToTable("WriteOffLoans");
                });

            modelBuilder.Entity("CBS.NLoan.Data.LoanProductCollateral", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CollateralId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LoanProductId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("MaximumValueRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MinimumValueRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ModifiedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollateralId");

                    b.HasIndex("LoanProductId");

                    b.ToTable("LoanProductCollateral");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CollateraP.LoanApplicationCollateral", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", "LoanApplication")
                        .WithMany("Collateras")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.LoanProductCollateral", "LoanProductCollateral")
                        .WithMany()
                        .HasForeignKey("LoanProductCollateralId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.LoanProductCollateral", null)
                        .WithMany("LoanApplicationCollaterals")
                        .HasForeignKey("LoanProductCollateralId1");

                    b.Navigation("LoanApplication");

                    b.Navigation("LoanProductCollateral");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeMember", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeGroup", "LoanCommiteeGroup")
                        .WithMany("LoanCommiteeMembers")
                        .HasForeignKey("LoanCommiteeGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanCommiteeGroup");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeValidationHistory", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", "LoanApplication")
                        .WithMany("LoanCommiteeValidations")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeMember", "LoanCommiteeMember")
                        .WithMany("LoanCommiteeValidationHistories")
                        .HasForeignKey("LoanCommiteeMemberId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");

                    b.Navigation("LoanCommiteeMember");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.DocumentAttachedToLoan", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.DocumentP.Document", "Document")
                        .WithMany()
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", "LoanApplication")
                        .WithMany("DocumentAttachedToLoans")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.DocumentJoin", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.DocumentP.Document", "Document")
                        .WithMany("DocumentJoins")
                        .HasForeignKey("DocumentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.DocumentP.DocumentPack", "DocumentPack")
                        .WithMany("DocumentJoins")
                        .HasForeignKey("DocumentPackId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Document");

                    b.Navigation("DocumentPack");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.FeeP.LoanProductFee", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.FeeP.Fee", "Fee")
                        .WithMany("LoanProductFeeJoins")
                        .HasForeignKey("FeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("LoanProductFeeJoins")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fee");

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.CustomerProfile", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany()
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", "LoanApplication")
                        .WithMany()
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanAmortization", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", "Loan")
                        .WithMany("LoanAmortizations")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("LoanApplications")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.LoanPurposeP.LoanPurpose", "LoanPurpose")
                        .WithMany()
                        .HasForeignKey("LoanPurposeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.TaxP.Tax", null)
                        .WithMany("LoanApplication")
                        .HasForeignKey("TaxId");

                    b.Navigation("LoanProduct");

                    b.Navigation("LoanPurpose");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanCommentry", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanGuarantor", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", "LoanApplication")
                        .WithMany("Guarantors")
                        .HasForeignKey("LoanApplicationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.TaxP.Tax", "Tax")
                        .WithMany()
                        .HasForeignKey("TaxId");

                    b.Navigation("Tax");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductMaturityPeriodExtension", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("LoanProductMaturityPeriodExtensions")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductRepaymentCycle", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("LoanProductRepaymentCycles")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProductRepaymentOrder", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("LoanProductRepaymentOrders")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.RescheduleLoan", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.PenaltyP.Penalty", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("Penalties")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.RefundP.Refund", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", "Loan")
                        .WithMany("Refunds")
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.RefundP.RefundDetail", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanAmortization", null)
                        .WithMany("RefundDetails")
                        .HasForeignKey("LoanAmortizationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.RefundP.Refund", "Refund")
                        .WithMany("RefundDetails")
                        .HasForeignKey("RefundId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Refund");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.WriteOffLoanP.WriteOffLoan", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Loan");
                });

            modelBuilder.Entity("CBS.NLoan.Data.LoanProductCollateral", b =>
                {
                    b.HasOne("CBS.NLoan.Data.Entity.CollateraP.Collateral", "Collateral")
                        .WithMany("LoanProductCollaterals")
                        .HasForeignKey("CollateralId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", "LoanProduct")
                        .WithMany("LoanProductCollaterals")
                        .HasForeignKey("LoanProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collateral");

                    b.Navigation("LoanProduct");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CollateraP.Collateral", b =>
                {
                    b.Navigation("LoanProductCollaterals");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeGroup", b =>
                {
                    b.Navigation("LoanCommiteeMembers");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.CommiteeP.LoanCommiteeMember", b =>
                {
                    b.Navigation("LoanCommiteeValidationHistories");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.Document", b =>
                {
                    b.Navigation("DocumentJoins");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.DocumentP.DocumentPack", b =>
                {
                    b.Navigation("DocumentJoins");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.FeeP.Fee", b =>
                {
                    b.Navigation("LoanProductFeeJoins");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.Loan", b =>
                {
                    b.Navigation("LoanAmortizations");

                    b.Navigation("Refunds");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanAmortization", b =>
                {
                    b.Navigation("RefundDetails");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanApplication", b =>
                {
                    b.Navigation("Collateras");

                    b.Navigation("DocumentAttachedToLoans");

                    b.Navigation("Guarantors");

                    b.Navigation("LoanCommiteeValidations");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.LoanApplicationP.LoanProduct", b =>
                {
                    b.Navigation("LoanApplications");

                    b.Navigation("LoanProductCollaterals");

                    b.Navigation("LoanProductFeeJoins");

                    b.Navigation("LoanProductMaturityPeriodExtensions");

                    b.Navigation("LoanProductRepaymentCycles");

                    b.Navigation("LoanProductRepaymentOrders");

                    b.Navigation("Penalties");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.RefundP.Refund", b =>
                {
                    b.Navigation("RefundDetails");
                });

            modelBuilder.Entity("CBS.NLoan.Data.Entity.TaxP.Tax", b =>
                {
                    b.Navigation("LoanApplication");
                });

            modelBuilder.Entity("CBS.NLoan.Data.LoanProductCollateral", b =>
                {
                    b.Navigation("LoanApplicationCollaterals");
                });
#pragma warning restore 612, 618
        }
    }
}
